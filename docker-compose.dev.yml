version: '3.8'

services:
  # Development Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/fivapp_dev
      - REDIS_URL=redis://redis:6379
      - LOG_LEVEL=debug
    depends_on:
      - postgres
      - redis
    volumes:
      - .:/app
      - /app/node_modules
      - /app/client/node_modules
    command: npm run dev
    restart: unless-stopped
    networks:
      - fivapp-dev-network

  # PostgreSQL Database for Development
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: fivapp_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - fivapp-dev-network

  # Redis for Development
  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis_dev_data:/data
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - fivapp-dev-network

  # Evolution API for Development
  evolution:
    image: evolution-api/evolution-api:latest
    ports:
      - "8080:8080"
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/evolution_dev
      - REDIS_URL=redis://redis:6379
      - AUTHENTICATION_API_KEY=dev-evolution-api-key
      - WEBHOOK_GLOBAL_URL=http://app:3000/api/webhooks/evolution
      - WEBHOOK_GLOBAL_ENABLED=true
      - WEBHOOK_GLOBAL_WEBHOOK_BY_EVENTS=true
    depends_on:
      - postgres
      - redis
    volumes:
      - evolution_dev_data:/evolution/instances
    restart: unless-stopped
    networks:
      - fivapp-dev-network

  # Adminer for Database Management
  adminer:
    image: adminer:latest
    ports:
      - "8081:8080"
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - fivapp-dev-network

volumes:
  postgres_dev_data:
  redis_dev_data:
  evolution_dev_data:

networks:
  fivapp-dev-network:
    driver: bridge
